// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"github.com/google/wire"

	"github.com/travisjeffery/proglog/internal/config"
	"github.com/travisjeffery/proglog/internal/grpc/auth"
	"github.com/travisjeffery/proglog/internal/grpc/server"
	"github.com/travisjeffery/proglog/internal/membership"
	"github.com/travisjeffery/proglog/internal/raft"
	"github.com/travisjeffery/proglog/internal/raftapp"
	"github.com/travisjeffery/proglog/internal/service"
)

// Injectors from wire.go:

func InitializeService(env *config.Env) (*service.Service, error) {
	cMux, err := ProvideMux(env)
	if err != nil {
		return nil, err
	}
	logConfig := ProvideSegmentConfig(env)
	log, err := ProvideLog(logConfig)
	if err != nil {
		return nil, err
	}
	logStore, err := ProvideLogStore(env, log)
	if err != nil {
		return nil, err
	}
	tlsConfig, err := ProvideInnerTLSConfig(env)
	if err != nil {
		return nil, err
	}
	streamLayer := raft.NewStreamLayer(cMux, tlsConfig)
	args := ProvideRaftArgs(env)
	raftRaft, err := raft.NewRaft(log, logStore, streamLayer, args)
	if err != nil {
		return nil, err
	}
	resource := raftapp.NewResource(log, raftRaft)
	authArgs := ProvideACLArgs(env)
	authorizer := auth.NewAuthorizer(authArgs)
	servers := raftapp.NewGetServers(raftRaft)
	config2 := ProvideTLSConfig(tlsConfig)
	grpcServer, err := server.NewGRPCServer(resource, authorizer, servers, config2)
	if err != nil {
		return nil, err
	}
	membershipHandler := raftapp.NewMembershipHandler(raftRaft)
	membershipArgs, err := ProvideMembershipArgs(env)
	if err != nil {
		return nil, err
	}
	membershipMembership, err := membership.NewMembership(membershipHandler, membershipArgs)
	if err != nil {
		return nil, err
	}
	serviceService := service.NewService(cMux, raftRaft, grpcServer, membershipMembership)
	return serviceService, nil
}

// wire.go:

var raftSet = wire.NewSet(
	ProvideLogStore,
	ProvideInnerTLSConfig,
	ProvideMux,
	ProvideRaftArgs, raft.NewStreamLayer, raft.NewFSM, raft.NewRaft,
)
